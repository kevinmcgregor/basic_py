for (i in 1:length(alpha)) {
s[,i] <- sample_dp(1, n.s, alpha[i])
}
# Plotting samples over different alpha values
par(mfrow=c(3,2))
for (i in 1:length(alpha)) {
hist(s[,i], breaks=length(s[,i]), xlim=range(s),
main=bquote(alpha ~ "=" ~ .(alpha[i])),
xlab="Values")
}
# Plotting samples over different alpha values
par(mfrow=c(3,2), mar=c(1,1,1,1))
for (i in 1:length(alpha)) {
hist(s[,i], breaks=length(s[,i]), xlim=range(s),
main=bquote(alpha ~ "=" ~ .(alpha[i])),
xlab="Values")
}
# alpha values to try
alpha <- c(0.01, 1, 5, 10, 50, 100000)
# Sampling DP from different alpha values
s <- matrix(0, n.s, length(alpha))
for (i in 1:length(alpha)) {
s[,i] <- sample_dp(1, n.s, alpha[i])
}
# Plotting samples over different alpha values
par(mfrow=c(3,2), mar=c(1,1,1,1))
for (i in 1:length(alpha)) {
hist(s[,i], breaks=length(s[,i]), xlim=range(s),
main=bquote(alpha ~ "=" ~ .(alpha[i])),
xlab="Values")
}
# alpha values to try
alpha <- c(0.01, 1, 5, 10, 50, 1e8)
# Sampling DP from different alpha values
s <- matrix(0, n.s, length(alpha))
for (i in 1:length(alpha)) {
s[,i] <- sample_dp(1, n.s, alpha[i])
}
# Plotting samples over different alpha values
par(mfrow=c(3,2), mar=c(1,1,1,1))
for (i in 1:length(alpha)) {
hist(s[,i], breaks=length(s[,i]), xlim=range(s),
main=bquote(alpha ~ "=" ~ .(alpha[i])),
xlab="Values")
}
# alpha values to try
alpha <- c(0.01, 1, 5, 10, 50, 100)
# Sampling DP from different alpha values
s <- matrix(0, n.s, length(alpha))
# Sampling DP from different alpha values
s <- matrix(0, n.s, length(alpha))
for (i in 1:length(alpha)) {
s[,i] <- sample_dp(1, n.s, alpha[i])
}
# Plotting samples over different alpha values
par(mfrow=c(3,2), mar=c(1,1,1,1))
for (i in 1:length(alpha)) {
hist(s[,i], breaks=length(s[,i]), xlim=range(s),
main=bquote(alpha ~ "=" ~ .(alpha[i])),
xlab="Values")
}
test <- sample_dp(1, n.s, 10)
source('/mnt/GREENWOOD_JBOD1/GREENWOOD_BACKUP/home/kevin.mcgregor/research/pitman_yor/basic_py/py_functions.R', echo=TRUE)
test <- sample_dp(1, n.s, 10)
test$samp
test$tot.spec
test <- sample_dp(1, n.s, 0.5)
test$tot.spec
test <- sample_dp(1, n.s, 0.005)
test$tot.spec
test <- sample_dp(1, n.s, 5)
test$tot.spec
n.s
seq(q:n.s)
seq(1:n.s)
1:n.s
n.s
conc = 0.5
d = 3
t.s=0
p.new <- (conc+dsct*t.s)/(i-1+conc)
rm(d)
dsct = 3
p.new <- (conc+dsct*t.s)/(i-1+conc)
p.new
i
i=1
p.new <- (conc+dsct*t.s)/(i-1+conc)
p.new
i=2
p.new <- (conc+dsct*t.s)/(i-1+conc)
p.new
c(NULL, 1)
c(NULL, 1, 2)
?rmultinom
i=10
dsct
s.c <- (3,4,2)
s.c <- c(3,4,2)
(s.c-dsct)/(i-1+dsct*t.s)
t.s <- 3
(s.c-dsct)/(i-1+dsct*t.s)
dsct <- 0.5
(s.c-dsct)/(i-1+dsct*t.s)
sum((s.c-dsct)/(i-1+dsct*t.s))
s.c
t.s
i
(s.c-dsct)/(i-1-dsct*t.s)
sum((s.c-dsct)/(i-1-dsct*t.s))
rmultinom(1, 1, p)
# Sample existing species
p <- (s.c-dsct)/(i-1-dsct*t.s)
rmultinom(1, 1, p)
c(rmultinom(1, 1, p))
mn <- c(rmultinom(1, 1, p))
mn
which(mn==1)
wh.mn
wh.mn <- which(mn==1)
wh.mn
#' Sample from Pitman-Yor process
#'
#'
#' @return
#' @export
#'
#' @examples
sample_py <- function(n.s, con, dsct) {
# Vector to contained sampled values
samp <- rep(0, n.s)
s.c <- NULL #Container for species counts
t.s <- 0 #Total species
for (i in 1:n.s) {
p.new <- (conc+dsct*t.s)/(i-1+conc)
samp.new <- rbinom(1, 1, p.new)
if (samp.new==1) {
# Sample new species
samp[i] <- t.s + 1
s.c <- c(s.c, 1)
t.s <- t.s + 1
} else {
# Sample existing species
p <- (s.c-dsct)/(i-1-dsct*t.s)
mn <- c(rmultinom(1, 1, p))
wh.mn <- which(mn==1)
samp[i] <- wh.mn
s.c[wh.mn] <- s.c[wh.mn] + 1
}
}
return(list(samp=samp, s.c=s.c, t.s=t.s))
}
sample_py(n.s, 0.5, 0.5)
sample_py(1000, 0.5, 0.5)
source("~/research/pitman_yor/basic_py/py_functions.R")
# Number of samples
n.s <- 1000
# Concentration and discount values to try
conc <- c(0.01, 1, 5)
dsct <- c(0.1, 0.5, 0.9)
i=1
conc[i]
source("~/research/pitman_yor/basic_py/py_functions.R")
conc[i]
dsct
# Sampling DP for fixed discount under different concentrations
s1 <- matrix(0, n.s, length(conc))
dim(s1)
for (i in 1:length(conc)) {
s1[,i] <- sample_py(n.s, conc[i], dsct)$samp
}
for (i in 1:length(conc)) {
s1[,i] <- sample_py(n.s, conc[i], dsct)$samp
}
n.s
conc[i]
dsct
dsct <- 0.5
# Sampling DP for fixed discount under different concentrations
s1 <- matrix(0, n.s, length(conc))
for (i in 1:length(conc)) {
s1[,i] <- sample_py(n.s, conc[i], dsct)$samp
}
s1
head(s1, 100)
# Concentration and discount values to try
conc <- c(0.01, 0.5, 1, 10)
dsct <- 0.5
# Sampling DP for fixed discount under different concentrations
s1 <- matrix(0, n.s, length(conc))
for (i in 1:length(conc)) {
s1[,i] <- sample_py(n.s, conc[i], dsct)$samp
}
head(s1, 100)
plot(s1[,1])
dev.off()
plot(s1[,1], lty=19)
plot(s1[,1], pty=19)
plot(s1[,1], pch=19)
plot(s1[,1], pch=19, cex=0.5)
plot(s1[,1], pch=19, cex=0.5, col="blue")
paste0("Conc =", conc[i], ", disc =", dsct)
paste0("Conc = ", conc[i], ", disc = ", dsct)
par(mfrow=c(2,2), mar=c(1,1,1,1))
for (i in 1:length(conc)) {
plot(s1[,i], pch=19, cex=0.5, col="blue",
main=paste0("Concentration = ", conc[i], ", disc = ", dsct),
xlab="Sample number")
}
dev.off()
par(mfrow=c(2,2))
for (i in 1:length(conc)) {
plot(s1[,i], pch=19, cex=0.5, col="blue",
main=paste0("Concentration = ", conc[i], ", disc = ", dsct),
xlab="Sample number")
}
par(mfrow=c(2,2))
for (i in 1:length(conc)) {
plot(s1[,i], pch=19, cex=0.5, col="blue",
main=paste0("Concentration = ", conc[i], ", disc = ", dsct),
xlab="Sample number", ylab="Species number")
}
dsct <- 0.1
s1 <- matrix(0, n.s, length(conc))
for (i in 1:length(conc)) {
s1[,i] <- sample_py(n.s, conc[i], dsct)$samp
}
par(mfrow=c(2,2))
for (i in 1:length(conc)) {
plot(s1[,i], pch=19, cex=0.5, col="blue",
main=paste0("Concentration = ", conc[i], ", disc = ", dsct),
xlab="Sample number", ylab="Species number")
}
# Sampling DP for fixed discount under different concentrations
samp <- vector("list", length=length(conc))
s1 <- matrix(0, n.s, length(conc))
s1 <- matrix(0, n.s, length(conc))
for (i in 1:length(conc)) {
samp[[i]] <- sample_py(n.s, conc[i], dsct)
s1[,i] <- samp[[i]]$samp
}
rm(s1)
# Sampling DP for fixed discount under different concentrations
samp <- vector("list", length=length(conc))
s1 <- matrix(0, n.s, length(conc))
for (i in 1:length(conc)) {
samp[[i]] <- sample_py(n.s, conc[i], dsct)
}
par(mfrow=c(2,2))
for (i in 1:length(conc)) {
plot(samp[[i]]$samp, pch=19, cex=0.5, col="blue",
main=paste0("Concentration = ", conc[i], ", disc = ", dsct),
xlab="Sample number", ylab="Species number")
}
# Number of customers at each table
plot(samp[[1]]$s.c)
dev.off()
samp[[1]]$s.c
# Number of customers at each table
plot(samp[[4]]$s.c)
# Number of customers at each table
plot(samp[[4]]$s.c, type="l")
# Number of customers at each table
plot(samp[[4]]$s.c, type="l", lwd=3, col="blue")
# Number of customers at each table
par(mfrow=c(2,2))
for (i in 1:length(conc)) {
plot(samp[[i]]$s.c, type="l", lwd=3, col="blue",
main=paste0("Concentration = ", conc[i], ", disc = ", dsct),
xlab="Table", ylab="Number at table")
}
samp[[4]]$s.c
gc()
source("~/research/pitman_yor/basic_py/py_functions.R")
# Number of samples
n.s <- 10000
# Concentration and discount values to try
conc <- c(0.01, 0.5, 1, 10)
dsct <- 0.1
# Sampling DP for fixed discount under different concentrations
samp <- vector("list", length=length(conc))
s1 <- matrix(0, n.s, length(conc))
for (i in 1:length(conc)) {
cat("Concentration =", conc[i])
samp[[i]] <- sample_py(n.s, conc[i], dsct)
}
par(mfrow=c(2,2))
for (i in 1:length(conc)) {
plot(samp[[i]]$samp, pch=19, cex=0.5, col="blue",
main=paste0("Concentration = ", conc[i], ", disc = ", dsct),
xlab="Sample number", ylab="Species number")
}
dsct <- 0.5
# Sampling DP for fixed discount under different concentrations
samp <- vector("list", length=length(conc))
s1 <- matrix(0, n.s, length(conc))
for (i in 1:length(conc)) {
cat("Concentration =", conc[i], "\n")
samp[[i]] <- sample_py(n.s, conc[i], dsct)
}
par(mfrow=c(2,2))
for (i in 1:length(conc)) {
plot(samp[[i]]$samp, pch=19, cex=0.5, col="blue",
main=paste0("Concentration = ", conc[i], ", disc = ", dsct),
xlab="Sample number", ylab="Species number")
}
# Number of customers at each table
par(mfrow=c(2,2))
for (i in 1:length(conc)) {
plot(samp[[i]]$s.c, type="l", lwd=3, col="blue",
main=paste0("Concentration = ", conc[i], ", disc = ", dsct),
xlab="Table", ylab="Number at table")
}
# Number of customers at each table
par(mfrow=c(2,2))
for (i in 1:length(conc)) {
plot(sort(samp[[i]]$s.c), type="l", lwd=3, col="blue",
main=paste0("Concentration = ", conc[i], ", disc = ", dsct),
xlab="Table", ylab="Number at table")
}
# Number of customers at each table
par(mfrow=c(2,2))
for (i in 1:length(conc)) {
plot(sort(samp[[i]]$s.c, decreasing = TRUE), type="l", lwd=3, col="blue",
main=paste0("Concentration = ", conc[i], ", disc = ", dsct),
xlab="Table", ylab="Number at table")
}
# Number of customers at each table
par(mfrow=c(2,2))
for (i in 1:length(conc)) {
plot(sort(samp[[i]]$s.c, decreasing = TRUE), type="l", lwd=3, col="blue",
main=paste0("Concentration = ", conc[i], ", disc = ", dsct),
xlab="Table (ordered by freq)", ylab="Number at table")
}
# Concentration and discount values to try
conc <- c(0.01, 0.5, 1, 10)
dsct <- 0.9
# Sampling DP for fixed discount under different concentrations
samp <- vector("list", length=length(conc))
s1 <- matrix(0, n.s, length(conc))
for (i in 1:length(conc)) {
cat("Concentration =", conc[i], "\n")
samp[[i]] <- sample_py(n.s, conc[i], dsct)
}
par(mfrow=c(2,2))
for (i in 1:length(conc)) {
plot(samp[[i]]$samp, pch=19, cex=0.5, col="blue",
main=paste0("Concentration = ", conc[i], ", disc = ", dsct),
xlab="Sample number", ylab="Species number")
}
# Number of customers at each table
par(mfrow=c(2,2))
for (i in 1:length(conc)) {
plot(sort(samp[[i]]$s.c, decreasing = TRUE), type="l", lwd=3, col="blue",
main=paste0("Concentration = ", conc[i], ", disc = ", dsct),
xlab="Table (ordered by freq)", ylab="Number at table")
}
# Concentration and discount values to try
conc <- c(0.01, 0.5, 1, 10)
dsct <- 0.99
# Sampling DP for fixed discount under different concentrations
samp <- vector("list", length=length(conc))
s1 <- matrix(0, n.s, length(conc))
for (i in 1:length(conc)) {
cat("Concentration =", conc[i], "\n")
samp[[i]] <- sample_py(n.s, conc[i], dsct)
}
par(mfrow=c(2,2))
for (i in 1:length(conc)) {
plot(samp[[i]]$samp, pch=19, cex=0.5, col="blue",
main=paste0("Concentration = ", conc[i], ", disc = ", dsct),
xlab="Sample number", ylab="Species number")
}
# Number of customers at each table
par(mfrow=c(2,2))
for (i in 1:length(conc)) {
plot(sort(samp[[i]]$s.c, decreasing = TRUE), type="l", lwd=3, col="blue",
main=paste0("Concentration = ", conc[i], ", disc = ", dsct),
xlab="Table (ordered by freq)", ylab="Number at table")
}
# Concentration and discount values to try
conc <- c(0.01, 0.5, 1, 10)
dsct <- 0.5
# Sampling DP for fixed discount under different concentrations
samp <- vector("list", length=length(conc))
s1 <- matrix(0, n.s, length(conc))
for (i in 1:length(conc)) {
cat("Concentration =", conc[i], "\n")
samp[[i]] <- sample_py(n.s, conc[i], dsct)
}
par(mfrow=c(2,2))
for (i in 1:length(conc)) {
plot(samp[[i]]$samp, pch=19, cex=0.5, col="blue",
main=paste0("Concentration = ", conc[i], ", disc = ", dsct),
xlab="Sample number", ylab="Species number")
}
# Number of customers at each table
par(mfrow=c(2,2))
for (i in 1:length(conc)) {
plot(sort(samp[[i]]$s.c, decreasing = TRUE), type="l", lwd=3, col="blue",
main=paste0("Concentration = ", conc[i], ", disc = ", dsct),
xlab="Table (ordered by freq)", ylab="Number at table")
}
# Concentration and discount values to try
conc <- c(0.01, 0.5, 1, 10)
dsct <- 0.2
# Sampling DP for fixed discount under different concentrations
samp <- vector("list", length=length(conc))
s1 <- matrix(0, n.s, length(conc))
for (i in 1:length(conc)) {
cat("Concentration =", conc[i], "\n")
samp[[i]] <- sample_py(n.s, conc[i], dsct)
}
par(mfrow=c(2,2))
for (i in 1:length(conc)) {
plot(samp[[i]]$samp, pch=19, cex=0.5, col="blue",
main=paste0("Concentration = ", conc[i], ", disc = ", dsct),
xlab="Sample number", ylab="Species number")
}
# Number of customers at each table
par(mfrow=c(2,2))
for (i in 1:length(conc)) {
plot(sort(samp[[i]]$s.c, decreasing = TRUE), type="l", lwd=3, col="blue",
main=paste0("Concentration = ", conc[i], ", disc = ", dsct),
xlab="Table (ordered by freq)", ylab="Number at table")
}
floor(10)==10
floor(1.5)==1.5
#'
#'
#' @param n.s Number of samples
#' @param conc Concentration parameter (must be greater than minus discount parameter)
#' @param dsct Discount parameter (must be between 0 and 1)
#'
#' @return
#' @export
#'
#' @examples
sample_py <- function(n.s, conc, dsct) {
if (!n.s>0 | !floor(n.s)==n.s) stop("n.s must be a positive integer")
if (dsct<0 | dsct>1) stop("dsct must be between 0 and 1")
if (conc<-dsct) stop("conc must be greater than -dsct")
# Vector to contained sampled values
samp <- rep(0, n.s)
s.c <- NULL #Container for species counts
t.s <- 0 #Total species
for (i in 1:n.s) {
p.new <- (conc+dsct*t.s)/(i-1+conc)
samp.new <- rbinom(1, 1, p.new)
if (samp.new==1) {
# Sample new species
samp[i] <- t.s + 1
s.c <- c(s.c, 1)
t.s <- t.s + 1
} else {
# Sample existing species
p <- (s.c-dsct)/(i-1-dsct*t.s)
mn <- c(rmultinom(1, 1, p))
wh.mn <- which(mn==1)
samp[i] <- wh.mn
s.c[wh.mn] <- s.c[wh.mn] + 1
}
}
return(list(samp=samp, s.c=s.c, t.s=t.s))
}
sample_py(n.s, conc[i], 1.1)
sample_py(n.s, conc[i], 1.0)
source('/mnt/GREENWOOD_JBOD1/GREENWOOD_BACKUP/home/kevin.mcgregor/research/pitman_yor/basic_py/py_functions.R', echo=TRUE)
sample_py(n.s, conc[i], 1.0)
sample_py(n.s, conc[i], -0.1)
sample_py(n.s, conc[i], 0)
sample_py(n.s, 10, 0.2)
sample_py(n.s, -10, 0.2)
sample_py(n.s, -0.25, 0.2)
sample_py(n.s, -0.2, 0.2)
source('/mnt/GREENWOOD_JBOD1/GREENWOOD_BACKUP/home/kevin.mcgregor/research/pitman_yor/basic_py/py_functions.R', echo=TRUE)
sample_py(n.s, -0.2, 0.2)
sample_py(n.s, -0.199, 0.2)
# Sampling DP for fixed discount under different concentrations
samp <- vector("list", length=length(conc))
s1 <- matrix(0, n.s, length(conc))
for (i in 1:length(conc)) {
cat("Concentration =", conc[i], "\n")
samp[[i]] <- sample_py(n.s, conc[i], dsct)
}
par(mfrow=c(2,2))
for (i in 1:length(conc)) {
plot(samp[[i]]$samp, pch=19, cex=0.5, col="blue",
main=paste0("Concentration = ", conc[i], ", disc = ", dsct),
xlab="Sample number", ylab="Species number")
}
# Number of customers at each table
par(mfrow=c(2,2))
for (i in 1:length(conc)) {
plot(sort(samp[[i]]$s.c, decreasing = TRUE), type="l", lwd=3, col="blue",
main=paste0("Concentration = ", conc[i], ", disc = ", dsct),
xlab="Table (ordered by freq)", ylab="Number at table")
}
c(TRUE, FALSE) | c(TRUE, TRUE)
c(TRUE, FALSE) | c(TRUE, FALSE)
pmax(0, c(-1,0,1))
# Testing PY with specified frequency dist
fr <- c(0.1, 0.2, 0.05, 0.05, 0.3, 0.2, 0.1)
sum(fr)
fr
sample_py(1000, 0.5, 0.5)
sample_py(1000, 0.5, 0.5, fr)
source('/mnt/GREENWOOD_JBOD1/GREENWOOD_BACKUP/home/kevin.mcgregor/research/pitman_yor/basic_py/py_functions.R', echo=TRUE)
sample_py(1000, 0.5, 0.5, fr)
test.fr <- sample_py(1000, 0.5, 0.5, fr)
test.fr
test.fr$s.c/sum(test.fr$s.c)
